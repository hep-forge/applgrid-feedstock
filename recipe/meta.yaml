{% set versions = {
    "1.6.36": "2dc23844671284b4cf9f4b69f317ef68a1530b4b1fb093a31395b35aac9fcf1c"
} %}

{% set version = environ.get('COMMIT_VERSION', None) %}
{% set version = version or versions.keys()|first %}
{% set version = version|string %}

package:
  name: {{ environ.get('ANACONDA_PACKAGE', "applgrid")|string|lower }}
  version: {{ environ.get('ANACONDA_VERSION', version)|replace('/', '.')|replace('-', '.') }}

source:
  url: "https://applgrid.hepforge.org/downloads/applgrid-{{ version }}.tgz"
  {% if versions.get(version, None) %}
  sha256: {{ versions.get(version) }}
  {% endif %}
  patches:
    - patches/cstdint.patch
    - patches/iterator.patch
    - patches/undefined.patch

requirements:
  build:
    - {{ compiler('gfortran') }}   # GNU Fortran compiler
    - {{ compiler('c') }}          # GNU C compiler
    - {{ compiler('cxx') }}        # GNU C++ compiler

    - cmake                        # Build system
    - make                         # Make utility
    - libtool
    - autoconf
    - automake
    - root

  host:
    - hoppet
    - lhapdf>=6
    - zlib
    - root

  run:
    - hoppet
    - lhapdf>=6
    - root

test:
  commands:
    - echo "Running.. $(which applgrid-convert)"
    - applgrid-convert

about:
  home: "https://applgrid.hepforge.org"
  license: "GPL-3.0"
  summary: "The APPLgrid project provides a fast and flexible way to reproduce the results of full NLO calculations"
  description: |
    The APPLgrid project provides a fast and flexible way to reproduce the results of full NLO calculations with any input parton distribution set in only a few milliseconds rather than the weeks normally required to gain adequate statistics.
    Written in C++ (although a fortran interface is included) it can be used for the calculation of any process where the hard subprocess weights from the convolution with the PDF are available from the calculation.

extra:
  recipe-maintainers:
    - meiyasan
